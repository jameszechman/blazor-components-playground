@inject IJSRuntime JSRuntime

<CascadingValue Name="Id" Value=@Id>
    @ChildContent
</CascadingValue>

@code {

    [Parameter]
    public string? Id { get; set; } = Random.Shared.NextSingle().ToString("N");


    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    [Parameter] 
    public EventCallback<bool> OnOpen { get; set; }

    [Parameter]
    public bool IsOpen { get; set; } = false;

    [Parameter]
    public bool IsClose { get; set; } = false;

    public void OpenModal()
    {
        IsOpen = true;
        JSRuntime.InvokeVoidAsync("MicroModal.show", Id, new { disableScroll = true, disableFocus = true });
        OnOpen.InvokeAsync(IsOpen);
    }
    public void CloseModal()
    {
        IsOpen = false;
        JSRuntime.InvokeVoidAsync("MicroModal.close", Id);
        OnClose.InvokeAsync(IsOpen);
    }
}
